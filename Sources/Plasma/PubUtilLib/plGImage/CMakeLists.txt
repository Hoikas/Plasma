set(plGImage_SOURCES
    hsCodecManager.cpp
    hsDXTSoftwareCodec.cpp
    plAVIWriter.cpp
    plBitmap.cpp
    plBumpMapGen.cpp
    plCubicEnvironmap.cpp
    plDynamicTextMap.cpp
    plFont.cpp
    plFontCache.cpp
    plJPEG.cpp
    plLODMipmap.cpp
    plMipmap.cpp
    plPNG.cpp
    plTGAWriter.cpp
)

set(plGImage_HEADERS
    hsCodec.h
    hsCodecManager.h
    hsDXTSoftwareCodec.h
    plAVIWriter.h
    plBitmap.h
    plBumpMapGen.h
    plCubicEnvironmap.h
    plDynamicTextMap.h
    plFont.h
    plFontCache.h
    plGImageCreatable.h
    plJPEG.h
    plLODMipmap.h
    plMipmap.h
    plPNG.h
    plTGAWriter.h
)

add_library(plGImage STATIC ${plGImage_SOURCES} ${plGImage_HEADERS})
target_link_libraries(
    plGImage
    PUBLIC
        CoreLib
        pnKeyedObject
        plMessage
        plResMgr
    PRIVATE
        pnDispatch
        pnMessage
        pnNucleusInc
        plResMgr
        JPEG::JPEG
        PNG::PNG
        $<$<PLATFORM_ID:Windows>:Vfw32>
    INTERFACE
        pnFactory
)

plasma_optimize_target(plGImage PRECOMPILED_HEADERS Pch.h)
plasma_sanitize_target(plGImage)

source_group("Source Files" FILES ${plGImage_SOURCES})
source_group("Header Files" FILES ${plGImage_HEADERS})
